
Bai6.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000004d4  08000194  08000194  00010194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000668  08000670  00010670  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000668  08000668  00010670  2**0
                  CONTENTS
  4 .ARM          00000000  08000668  08000668  00010670  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000668  08000670  00010670  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000668  08000668  00010668  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800066c  0800066c  0001066c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010670  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000670  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000670  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00010670  2**0
                  CONTENTS, READONLY
 12 .debug_info   00001d53  00000000  00000000  000106a0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000066f  00000000  00000000  000123f3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000002b8  00000000  00000000  00012a68  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000270  00000000  00000000  00012d20  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000ce84  00000000  00000000  00012f90  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00001bcf  00000000  00000000  0001fe14  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0003f92d  00000000  00000000  000219e3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      000000cb  00000000  00000000  00061310  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000b04  00000000  00000000  000613dc  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	; (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	20000000 	.word	0x20000000
 80001b0:	00000000 	.word	0x00000000
 80001b4:	08000650 	.word	0x08000650

080001b8 <frame_dummy>:
 80001b8:	b508      	push	{r3, lr}
 80001ba:	4b03      	ldr	r3, [pc, #12]	; (80001c8 <frame_dummy+0x10>)
 80001bc:	b11b      	cbz	r3, 80001c6 <frame_dummy+0xe>
 80001be:	4903      	ldr	r1, [pc, #12]	; (80001cc <frame_dummy+0x14>)
 80001c0:	4803      	ldr	r0, [pc, #12]	; (80001d0 <frame_dummy+0x18>)
 80001c2:	f3af 8000 	nop.w
 80001c6:	bd08      	pop	{r3, pc}
 80001c8:	00000000 	.word	0x00000000
 80001cc:	20000004 	.word	0x20000004
 80001d0:	08000650 	.word	0x08000650

080001d4 <main>:
static void buzzer_Init(void);


//-----------------------------------------------------------------------------
int main(void)
{
 80001d4:	b580      	push	{r7, lr}
 80001d6:	af00      	add	r7, sp, #0

	mainInit();
 80001d8:	f000 f822 	bl	8000220 <mainInit>

	while(1)
	{
		if (GPIO_ReadInputDataBit(BUTTON_GPIO_PORT, BUTTON_GPIO_PIN) == BUTTON_PRESS)
 80001dc:	2108      	movs	r1, #8
 80001de:	480d      	ldr	r0, [pc, #52]	; (8000214 <main+0x40>)
 80001e0:	f000 f9ba 	bl	8000558 <GPIO_ReadInputDataBit>
 80001e4:	4603      	mov	r3, r0
 80001e6:	2b00      	cmp	r3, #0
 80001e8:	d109      	bne.n	80001fe <main+0x2a>
		{
			GPIO_SetBits(LED_GPIO_PORT, LED_GPIO_PIN);
 80001ea:	2101      	movs	r1, #1
 80001ec:	480a      	ldr	r0, [pc, #40]	; (8000218 <main+0x44>)
 80001ee:	f000 f9cd 	bl	800058c <GPIO_SetBits>
			GPIO_SetBits(BUZZER_GPIO_PORT, BUZZER_GPIO_PIN);
 80001f2:	f44f 7100 	mov.w	r1, #512	; 0x200
 80001f6:	4809      	ldr	r0, [pc, #36]	; (800021c <main+0x48>)
 80001f8:	f000 f9c8 	bl	800058c <GPIO_SetBits>
 80001fc:	e7ee      	b.n	80001dc <main+0x8>
		}


		else
		{
			GPIO_ResetBits(LED_GPIO_PORT, LED_GPIO_PIN);
 80001fe:	2101      	movs	r1, #1
 8000200:	4805      	ldr	r0, [pc, #20]	; (8000218 <main+0x44>)
 8000202:	f000 f9d2 	bl	80005aa <GPIO_ResetBits>
			GPIO_ResetBits(BUZZER_GPIO_PORT, BUZZER_GPIO_PIN);
 8000206:	f44f 7100 	mov.w	r1, #512	; 0x200
 800020a:	4804      	ldr	r0, [pc, #16]	; (800021c <main+0x48>)
 800020c:	f000 f9cd 	bl	80005aa <GPIO_ResetBits>
		if (GPIO_ReadInputDataBit(BUTTON_GPIO_PORT, BUTTON_GPIO_PIN) == BUTTON_PRESS)
 8000210:	e7e4      	b.n	80001dc <main+0x8>
 8000212:	bf00      	nop
 8000214:	40020400 	.word	0x40020400
 8000218:	40020000 	.word	0x40020000
 800021c:	40020800 	.word	0x40020800

08000220 <mainInit>:
	}
}


static
void mainInit(void){
 8000220:	b580      	push	{r7, lr}
 8000222:	af00      	add	r7, sp, #0
	SystemInit();
 8000224:	f000 f884 	bl	8000330 <SystemInit>
	buttonB2_Init();
 8000228:	f000 f840 	bl	80002ac <buttonB2_Init>
	buzzer_Init();
 800022c:	f000 f820 	bl	8000270 <buzzer_Init>
	led_Init();
 8000230:	f000 f802 	bl	8000238 <led_Init>
}
 8000234:	bf00      	nop
 8000236:	bd80      	pop	{r7, pc}

08000238 <led_Init>:
 * @param  None
 * @retval None
 */
static
void led_Init(void)
{
 8000238:	b580      	push	{r7, lr}
 800023a:	b082      	sub	sp, #8
 800023c:	af00      	add	r7, sp, #0
	//Declare type variable GPIO Struc-----------------------------------------
	GPIO_InitTypeDef GPIO_InitStructure;

	//Enable Clock GPIOA-------------------------------------------------------
	RCC_AHB1PeriphClockCmd(LED_GPIO_CLOCK_EN , ENABLE);
 800023e:	2101      	movs	r1, #1
 8000240:	2001      	movs	r0, #1
 8000242:	f000 f9c1 	bl	80005c8 <RCC_AHB1PeriphClockCmd>

	//Choose Pin Led-----------------------------------------------------------
	GPIO_InitStructure.GPIO_Pin = LED_GPIO_PIN;
 8000246:	2301      	movs	r3, #1
 8000248:	603b      	str	r3, [r7, #0]

	//Choose Pin Led as Out----------------------------------------------------
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
 800024a:	2301      	movs	r3, #1
 800024c:	713b      	strb	r3, [r7, #4]

	//Choose Speed Pin---------------------------------------------------------
	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 800024e:	2302      	movs	r3, #2
 8000250:	717b      	strb	r3, [r7, #5]

	//Select type--------------------------------------------------------------
	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
 8000252:	2300      	movs	r3, #0
 8000254:	71bb      	strb	r3, [r7, #6]

	//Select status------------------------------------------------------------
	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP ;
 8000256:	2301      	movs	r3, #1
 8000258:	71fb      	strb	r3, [r7, #7]

	//The function initializes all of the above values-------------------------
	GPIO_Init(LED_GPIO_PORT, &GPIO_InitStructure);
 800025a:	463b      	mov	r3, r7
 800025c:	4619      	mov	r1, r3
 800025e:	4803      	ldr	r0, [pc, #12]	; (800026c <led_Init+0x34>)
 8000260:	f000 f8ec 	bl	800043c <GPIO_Init>
}
 8000264:	bf00      	nop
 8000266:	3708      	adds	r7, #8
 8000268:	46bd      	mov	sp, r7
 800026a:	bd80      	pop	{r7, pc}
 800026c:	40020000 	.word	0x40020000

08000270 <buzzer_Init>:
 * @param  None
 * @retval None
 */
static
void buzzer_Init(void)
{
 8000270:	b580      	push	{r7, lr}
 8000272:	b082      	sub	sp, #8
 8000274:	af00      	add	r7, sp, #0
	//Declare type variable GPIO Struc-----------------------------------------
	GPIO_InitTypeDef GPIO_InitStructure;

	//Enable Clock GPIOC-------------------------------------------------------
	RCC_AHB1PeriphClockCmd(BUZZER_GPIO_CLOCK_EN, ENABLE);
 8000276:	2101      	movs	r1, #1
 8000278:	2004      	movs	r0, #4
 800027a:	f000 f9a5 	bl	80005c8 <RCC_AHB1PeriphClockCmd>
//Choose Pin Buzzer--------------------------------------------------------
	GPIO_InitStructure.GPIO_Pin = BUZZER_GPIO_PIN;
 800027e:	f44f 7300 	mov.w	r3, #512	; 0x200
 8000282:	603b      	str	r3, [r7, #0]

	//Choose Pin Buzzer as Out-------------------------------------------------
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
 8000284:	2301      	movs	r3, #1
 8000286:	713b      	strb	r3, [r7, #4]

	//Choose Speed Pin---------------------------------------------------------
	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 8000288:	2302      	movs	r3, #2
 800028a:	717b      	strb	r3, [r7, #5]

	//Select type--------------------------------------------------------------
	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
 800028c:	2300      	movs	r3, #0
 800028e:	71bb      	strb	r3, [r7, #6]

	//Select status------------------------------------------------------------
	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP ;
 8000290:	2301      	movs	r3, #1
 8000292:	71fb      	strb	r3, [r7, #7]

	//The function initializes all of the above values-------------------------
	GPIO_Init(BUZZER_GPIO_PORT, &GPIO_InitStructure);
 8000294:	463b      	mov	r3, r7
 8000296:	4619      	mov	r1, r3
 8000298:	4803      	ldr	r0, [pc, #12]	; (80002a8 <buzzer_Init+0x38>)
 800029a:	f000 f8cf 	bl	800043c <GPIO_Init>
}
 800029e:	bf00      	nop
 80002a0:	3708      	adds	r7, #8
 80002a2:	46bd      	mov	sp, r7
 80002a4:	bd80      	pop	{r7, pc}
 80002a6:	bf00      	nop
 80002a8:	40020800 	.word	0x40020800

080002ac <buttonB2_Init>:
 * @param  None
 * @retval None
 */
static
void buttonB2_Init(void)
{
 80002ac:	b580      	push	{r7, lr}
 80002ae:	b082      	sub	sp, #8
 80002b0:	af00      	add	r7, sp, #0
	//Declare type variable GPIO Struct----------------------------------------
	GPIO_InitTypeDef GPIO_InitStructure ;

	//Enable Clock GPIOC-------------------------------------------------------
	RCC_AHB1PeriphClockCmd(BUTTON_GPIO_CLOCK_EN, ENABLE);
 80002b2:	2101      	movs	r1, #1
 80002b4:	2002      	movs	r0, #2
 80002b6:	f000 f987 	bl	80005c8 <RCC_AHB1PeriphClockCmd>

	//Choose Pin BUTTON--------------------------------------------------------
	GPIO_InitStructure.GPIO_Pin = BUTTON_GPIO_PIN;
 80002ba:	2308      	movs	r3, #8
 80002bc:	603b      	str	r3, [r7, #0]

	//Choose Pin Led as Input--------------------------------------------------
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN;
 80002be:	2300      	movs	r3, #0
 80002c0:	713b      	strb	r3, [r7, #4]

	//Select status------------------------------------------------------------
	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP ;
 80002c2:	2301      	movs	r3, #1
 80002c4:	71fb      	strb	r3, [r7, #7]

	//The function initializes all of the above values-------------------------
	GPIO_Init(GPIOB, &GPIO_InitStructure);
 80002c6:	463b      	mov	r3, r7
 80002c8:	4619      	mov	r1, r3
 80002ca:	4803      	ldr	r0, [pc, #12]	; (80002d8 <buttonB2_Init+0x2c>)
 80002cc:	f000 f8b6 	bl	800043c <GPIO_Init>
}
 80002d0:	bf00      	nop
 80002d2:	3708      	adds	r7, #8
 80002d4:	46bd      	mov	sp, r7
 80002d6:	bd80      	pop	{r7, pc}
 80002d8:	40020400 	.word	0x40020400

080002dc <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80002dc:	480d      	ldr	r0, [pc, #52]	; (8000314 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80002de:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80002e0:	f000 f826 	bl	8000330 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002e4:	480c      	ldr	r0, [pc, #48]	; (8000318 <LoopForever+0x6>)
  ldr r1, =_edata
 80002e6:	490d      	ldr	r1, [pc, #52]	; (800031c <LoopForever+0xa>)
  ldr r2, =_sidata
 80002e8:	4a0d      	ldr	r2, [pc, #52]	; (8000320 <LoopForever+0xe>)
  movs r3, #0
 80002ea:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002ec:	e002      	b.n	80002f4 <LoopCopyDataInit>

080002ee <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002ee:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002f0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002f2:	3304      	adds	r3, #4

080002f4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002f4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002f6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002f8:	d3f9      	bcc.n	80002ee <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002fa:	4a0a      	ldr	r2, [pc, #40]	; (8000324 <LoopForever+0x12>)
  ldr r4, =_ebss
 80002fc:	4c0a      	ldr	r4, [pc, #40]	; (8000328 <LoopForever+0x16>)
  movs r3, #0
 80002fe:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000300:	e001      	b.n	8000306 <LoopFillZerobss>

08000302 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000302:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000304:	3204      	adds	r2, #4

08000306 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000306:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000308:	d3fb      	bcc.n	8000302 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800030a:	f000 f97d 	bl	8000608 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800030e:	f7ff ff61 	bl	80001d4 <main>

08000312 <LoopForever>:

LoopForever:
  b LoopForever
 8000312:	e7fe      	b.n	8000312 <LoopForever>
  ldr   r0, =_estack
 8000314:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 8000318:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800031c:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000320:	08000670 	.word	0x08000670
  ldr r2, =_sbss
 8000324:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000328:	2000001c 	.word	0x2000001c

0800032c <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800032c:	e7fe      	b.n	800032c <ADC_IRQHandler>
	...

08000330 <SystemInit>:
 8000330:	b580      	push	{r7, lr}
 8000332:	af00      	add	r7, sp, #0
 8000334:	4b16      	ldr	r3, [pc, #88]	; (8000390 <SystemInit+0x60>)
 8000336:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800033a:	4a15      	ldr	r2, [pc, #84]	; (8000390 <SystemInit+0x60>)
 800033c:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8000340:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 8000344:	4b13      	ldr	r3, [pc, #76]	; (8000394 <SystemInit+0x64>)
 8000346:	681b      	ldr	r3, [r3, #0]
 8000348:	4a12      	ldr	r2, [pc, #72]	; (8000394 <SystemInit+0x64>)
 800034a:	f043 0301 	orr.w	r3, r3, #1
 800034e:	6013      	str	r3, [r2, #0]
 8000350:	4b10      	ldr	r3, [pc, #64]	; (8000394 <SystemInit+0x64>)
 8000352:	2200      	movs	r2, #0
 8000354:	609a      	str	r2, [r3, #8]
 8000356:	4b0f      	ldr	r3, [pc, #60]	; (8000394 <SystemInit+0x64>)
 8000358:	681b      	ldr	r3, [r3, #0]
 800035a:	4a0e      	ldr	r2, [pc, #56]	; (8000394 <SystemInit+0x64>)
 800035c:	f023 7384 	bic.w	r3, r3, #17301504	; 0x1080000
 8000360:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8000364:	6013      	str	r3, [r2, #0]
 8000366:	4b0b      	ldr	r3, [pc, #44]	; (8000394 <SystemInit+0x64>)
 8000368:	4a0b      	ldr	r2, [pc, #44]	; (8000398 <SystemInit+0x68>)
 800036a:	605a      	str	r2, [r3, #4]
 800036c:	4b09      	ldr	r3, [pc, #36]	; (8000394 <SystemInit+0x64>)
 800036e:	681b      	ldr	r3, [r3, #0]
 8000370:	4a08      	ldr	r2, [pc, #32]	; (8000394 <SystemInit+0x64>)
 8000372:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8000376:	6013      	str	r3, [r2, #0]
 8000378:	4b06      	ldr	r3, [pc, #24]	; (8000394 <SystemInit+0x64>)
 800037a:	2200      	movs	r2, #0
 800037c:	60da      	str	r2, [r3, #12]
 800037e:	f000 f80d 	bl	800039c <SetSysClock>
 8000382:	4b03      	ldr	r3, [pc, #12]	; (8000390 <SystemInit+0x60>)
 8000384:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8000388:	609a      	str	r2, [r3, #8]
 800038a:	bf00      	nop
 800038c:	bd80      	pop	{r7, pc}
 800038e:	bf00      	nop
 8000390:	e000ed00 	.word	0xe000ed00
 8000394:	40023800 	.word	0x40023800
 8000398:	24003010 	.word	0x24003010

0800039c <SetSysClock>:
 800039c:	b480      	push	{r7}
 800039e:	af00      	add	r7, sp, #0
 80003a0:	4b22      	ldr	r3, [pc, #136]	; (800042c <SetSysClock+0x90>)
 80003a2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80003a4:	4a21      	ldr	r2, [pc, #132]	; (800042c <SetSysClock+0x90>)
 80003a6:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80003aa:	6413      	str	r3, [r2, #64]	; 0x40
 80003ac:	4b20      	ldr	r3, [pc, #128]	; (8000430 <SetSysClock+0x94>)
 80003ae:	681b      	ldr	r3, [r3, #0]
 80003b0:	4a1f      	ldr	r2, [pc, #124]	; (8000430 <SetSysClock+0x94>)
 80003b2:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 80003b6:	6013      	str	r3, [r2, #0]
 80003b8:	4b1c      	ldr	r3, [pc, #112]	; (800042c <SetSysClock+0x90>)
 80003ba:	4a1c      	ldr	r2, [pc, #112]	; (800042c <SetSysClock+0x90>)
 80003bc:	689b      	ldr	r3, [r3, #8]
 80003be:	6093      	str	r3, [r2, #8]
 80003c0:	4b1a      	ldr	r3, [pc, #104]	; (800042c <SetSysClock+0x90>)
 80003c2:	4a1a      	ldr	r2, [pc, #104]	; (800042c <SetSysClock+0x90>)
 80003c4:	689b      	ldr	r3, [r3, #8]
 80003c6:	6093      	str	r3, [r2, #8]
 80003c8:	4b18      	ldr	r3, [pc, #96]	; (800042c <SetSysClock+0x90>)
 80003ca:	689b      	ldr	r3, [r3, #8]
 80003cc:	4a17      	ldr	r2, [pc, #92]	; (800042c <SetSysClock+0x90>)
 80003ce:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 80003d2:	6093      	str	r3, [r2, #8]
 80003d4:	4b15      	ldr	r3, [pc, #84]	; (800042c <SetSysClock+0x90>)
 80003d6:	4a17      	ldr	r2, [pc, #92]	; (8000434 <SetSysClock+0x98>)
 80003d8:	605a      	str	r2, [r3, #4]
 80003da:	4b14      	ldr	r3, [pc, #80]	; (800042c <SetSysClock+0x90>)
 80003dc:	681b      	ldr	r3, [r3, #0]
 80003de:	4a13      	ldr	r2, [pc, #76]	; (800042c <SetSysClock+0x90>)
 80003e0:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80003e4:	6013      	str	r3, [r2, #0]
 80003e6:	bf00      	nop
 80003e8:	4b10      	ldr	r3, [pc, #64]	; (800042c <SetSysClock+0x90>)
 80003ea:	681b      	ldr	r3, [r3, #0]
 80003ec:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80003f0:	2b00      	cmp	r3, #0
 80003f2:	d0f9      	beq.n	80003e8 <SetSysClock+0x4c>
 80003f4:	4b10      	ldr	r3, [pc, #64]	; (8000438 <SetSysClock+0x9c>)
 80003f6:	f240 6202 	movw	r2, #1538	; 0x602
 80003fa:	601a      	str	r2, [r3, #0]
 80003fc:	4b0b      	ldr	r3, [pc, #44]	; (800042c <SetSysClock+0x90>)
 80003fe:	689b      	ldr	r3, [r3, #8]
 8000400:	4a0a      	ldr	r2, [pc, #40]	; (800042c <SetSysClock+0x90>)
 8000402:	f023 0303 	bic.w	r3, r3, #3
 8000406:	6093      	str	r3, [r2, #8]
 8000408:	4b08      	ldr	r3, [pc, #32]	; (800042c <SetSysClock+0x90>)
 800040a:	689b      	ldr	r3, [r3, #8]
 800040c:	4a07      	ldr	r2, [pc, #28]	; (800042c <SetSysClock+0x90>)
 800040e:	f043 0302 	orr.w	r3, r3, #2
 8000412:	6093      	str	r3, [r2, #8]
 8000414:	bf00      	nop
 8000416:	4b05      	ldr	r3, [pc, #20]	; (800042c <SetSysClock+0x90>)
 8000418:	689b      	ldr	r3, [r3, #8]
 800041a:	f003 030c 	and.w	r3, r3, #12
 800041e:	2b08      	cmp	r3, #8
 8000420:	d1f9      	bne.n	8000416 <SetSysClock+0x7a>
 8000422:	bf00      	nop
 8000424:	46bd      	mov	sp, r7
 8000426:	f85d 7b04 	ldr.w	r7, [sp], #4
 800042a:	4770      	bx	lr
 800042c:	40023800 	.word	0x40023800
 8000430:	40007000 	.word	0x40007000
 8000434:	08015410 	.word	0x08015410
 8000438:	40023c00 	.word	0x40023c00

0800043c <GPIO_Init>:
 800043c:	b480      	push	{r7}
 800043e:	b087      	sub	sp, #28
 8000440:	af00      	add	r7, sp, #0
 8000442:	6078      	str	r0, [r7, #4]
 8000444:	6039      	str	r1, [r7, #0]
 8000446:	2300      	movs	r3, #0
 8000448:	617b      	str	r3, [r7, #20]
 800044a:	2300      	movs	r3, #0
 800044c:	613b      	str	r3, [r7, #16]
 800044e:	2300      	movs	r3, #0
 8000450:	60fb      	str	r3, [r7, #12]
 8000452:	2300      	movs	r3, #0
 8000454:	617b      	str	r3, [r7, #20]
 8000456:	e076      	b.n	8000546 <GPIO_Init+0x10a>
 8000458:	2201      	movs	r2, #1
 800045a:	697b      	ldr	r3, [r7, #20]
 800045c:	fa02 f303 	lsl.w	r3, r2, r3
 8000460:	613b      	str	r3, [r7, #16]
 8000462:	683b      	ldr	r3, [r7, #0]
 8000464:	681b      	ldr	r3, [r3, #0]
 8000466:	693a      	ldr	r2, [r7, #16]
 8000468:	4013      	ands	r3, r2
 800046a:	60fb      	str	r3, [r7, #12]
 800046c:	68fa      	ldr	r2, [r7, #12]
 800046e:	693b      	ldr	r3, [r7, #16]
 8000470:	429a      	cmp	r2, r3
 8000472:	d165      	bne.n	8000540 <GPIO_Init+0x104>
 8000474:	687b      	ldr	r3, [r7, #4]
 8000476:	681a      	ldr	r2, [r3, #0]
 8000478:	697b      	ldr	r3, [r7, #20]
 800047a:	005b      	lsls	r3, r3, #1
 800047c:	2103      	movs	r1, #3
 800047e:	fa01 f303 	lsl.w	r3, r1, r3
 8000482:	43db      	mvns	r3, r3
 8000484:	401a      	ands	r2, r3
 8000486:	687b      	ldr	r3, [r7, #4]
 8000488:	601a      	str	r2, [r3, #0]
 800048a:	687b      	ldr	r3, [r7, #4]
 800048c:	681a      	ldr	r2, [r3, #0]
 800048e:	683b      	ldr	r3, [r7, #0]
 8000490:	791b      	ldrb	r3, [r3, #4]
 8000492:	4619      	mov	r1, r3
 8000494:	697b      	ldr	r3, [r7, #20]
 8000496:	005b      	lsls	r3, r3, #1
 8000498:	fa01 f303 	lsl.w	r3, r1, r3
 800049c:	431a      	orrs	r2, r3
 800049e:	687b      	ldr	r3, [r7, #4]
 80004a0:	601a      	str	r2, [r3, #0]
 80004a2:	683b      	ldr	r3, [r7, #0]
 80004a4:	791b      	ldrb	r3, [r3, #4]
 80004a6:	2b01      	cmp	r3, #1
 80004a8:	d003      	beq.n	80004b2 <GPIO_Init+0x76>
 80004aa:	683b      	ldr	r3, [r7, #0]
 80004ac:	791b      	ldrb	r3, [r3, #4]
 80004ae:	2b02      	cmp	r3, #2
 80004b0:	d12e      	bne.n	8000510 <GPIO_Init+0xd4>
 80004b2:	687b      	ldr	r3, [r7, #4]
 80004b4:	689a      	ldr	r2, [r3, #8]
 80004b6:	697b      	ldr	r3, [r7, #20]
 80004b8:	005b      	lsls	r3, r3, #1
 80004ba:	2103      	movs	r1, #3
 80004bc:	fa01 f303 	lsl.w	r3, r1, r3
 80004c0:	43db      	mvns	r3, r3
 80004c2:	401a      	ands	r2, r3
 80004c4:	687b      	ldr	r3, [r7, #4]
 80004c6:	609a      	str	r2, [r3, #8]
 80004c8:	687b      	ldr	r3, [r7, #4]
 80004ca:	689a      	ldr	r2, [r3, #8]
 80004cc:	683b      	ldr	r3, [r7, #0]
 80004ce:	795b      	ldrb	r3, [r3, #5]
 80004d0:	4619      	mov	r1, r3
 80004d2:	697b      	ldr	r3, [r7, #20]
 80004d4:	005b      	lsls	r3, r3, #1
 80004d6:	fa01 f303 	lsl.w	r3, r1, r3
 80004da:	431a      	orrs	r2, r3
 80004dc:	687b      	ldr	r3, [r7, #4]
 80004de:	609a      	str	r2, [r3, #8]
 80004e0:	687b      	ldr	r3, [r7, #4]
 80004e2:	685a      	ldr	r2, [r3, #4]
 80004e4:	697b      	ldr	r3, [r7, #20]
 80004e6:	b29b      	uxth	r3, r3
 80004e8:	4619      	mov	r1, r3
 80004ea:	2301      	movs	r3, #1
 80004ec:	408b      	lsls	r3, r1
 80004ee:	43db      	mvns	r3, r3
 80004f0:	401a      	ands	r2, r3
 80004f2:	687b      	ldr	r3, [r7, #4]
 80004f4:	605a      	str	r2, [r3, #4]
 80004f6:	687b      	ldr	r3, [r7, #4]
 80004f8:	685b      	ldr	r3, [r3, #4]
 80004fa:	683a      	ldr	r2, [r7, #0]
 80004fc:	7992      	ldrb	r2, [r2, #6]
 80004fe:	4611      	mov	r1, r2
 8000500:	697a      	ldr	r2, [r7, #20]
 8000502:	b292      	uxth	r2, r2
 8000504:	fa01 f202 	lsl.w	r2, r1, r2
 8000508:	b292      	uxth	r2, r2
 800050a:	431a      	orrs	r2, r3
 800050c:	687b      	ldr	r3, [r7, #4]
 800050e:	605a      	str	r2, [r3, #4]
 8000510:	687b      	ldr	r3, [r7, #4]
 8000512:	68da      	ldr	r2, [r3, #12]
 8000514:	697b      	ldr	r3, [r7, #20]
 8000516:	b29b      	uxth	r3, r3
 8000518:	005b      	lsls	r3, r3, #1
 800051a:	2103      	movs	r1, #3
 800051c:	fa01 f303 	lsl.w	r3, r1, r3
 8000520:	43db      	mvns	r3, r3
 8000522:	401a      	ands	r2, r3
 8000524:	687b      	ldr	r3, [r7, #4]
 8000526:	60da      	str	r2, [r3, #12]
 8000528:	687b      	ldr	r3, [r7, #4]
 800052a:	68da      	ldr	r2, [r3, #12]
 800052c:	683b      	ldr	r3, [r7, #0]
 800052e:	79db      	ldrb	r3, [r3, #7]
 8000530:	4619      	mov	r1, r3
 8000532:	697b      	ldr	r3, [r7, #20]
 8000534:	005b      	lsls	r3, r3, #1
 8000536:	fa01 f303 	lsl.w	r3, r1, r3
 800053a:	431a      	orrs	r2, r3
 800053c:	687b      	ldr	r3, [r7, #4]
 800053e:	60da      	str	r2, [r3, #12]
 8000540:	697b      	ldr	r3, [r7, #20]
 8000542:	3301      	adds	r3, #1
 8000544:	617b      	str	r3, [r7, #20]
 8000546:	697b      	ldr	r3, [r7, #20]
 8000548:	2b0f      	cmp	r3, #15
 800054a:	d985      	bls.n	8000458 <GPIO_Init+0x1c>
 800054c:	bf00      	nop
 800054e:	371c      	adds	r7, #28
 8000550:	46bd      	mov	sp, r7
 8000552:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000556:	4770      	bx	lr

08000558 <GPIO_ReadInputDataBit>:
 8000558:	b480      	push	{r7}
 800055a:	b085      	sub	sp, #20
 800055c:	af00      	add	r7, sp, #0
 800055e:	6078      	str	r0, [r7, #4]
 8000560:	460b      	mov	r3, r1
 8000562:	807b      	strh	r3, [r7, #2]
 8000564:	2300      	movs	r3, #0
 8000566:	73fb      	strb	r3, [r7, #15]
 8000568:	687b      	ldr	r3, [r7, #4]
 800056a:	691a      	ldr	r2, [r3, #16]
 800056c:	887b      	ldrh	r3, [r7, #2]
 800056e:	4013      	ands	r3, r2
 8000570:	2b00      	cmp	r3, #0
 8000572:	d002      	beq.n	800057a <GPIO_ReadInputDataBit+0x22>
 8000574:	2301      	movs	r3, #1
 8000576:	73fb      	strb	r3, [r7, #15]
 8000578:	e001      	b.n	800057e <GPIO_ReadInputDataBit+0x26>
 800057a:	2300      	movs	r3, #0
 800057c:	73fb      	strb	r3, [r7, #15]
 800057e:	7bfb      	ldrb	r3, [r7, #15]
 8000580:	4618      	mov	r0, r3
 8000582:	3714      	adds	r7, #20
 8000584:	46bd      	mov	sp, r7
 8000586:	f85d 7b04 	ldr.w	r7, [sp], #4
 800058a:	4770      	bx	lr

0800058c <GPIO_SetBits>:
 800058c:	b480      	push	{r7}
 800058e:	b083      	sub	sp, #12
 8000590:	af00      	add	r7, sp, #0
 8000592:	6078      	str	r0, [r7, #4]
 8000594:	460b      	mov	r3, r1
 8000596:	807b      	strh	r3, [r7, #2]
 8000598:	687b      	ldr	r3, [r7, #4]
 800059a:	887a      	ldrh	r2, [r7, #2]
 800059c:	831a      	strh	r2, [r3, #24]
 800059e:	bf00      	nop
 80005a0:	370c      	adds	r7, #12
 80005a2:	46bd      	mov	sp, r7
 80005a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005a8:	4770      	bx	lr

080005aa <GPIO_ResetBits>:
 80005aa:	b480      	push	{r7}
 80005ac:	b083      	sub	sp, #12
 80005ae:	af00      	add	r7, sp, #0
 80005b0:	6078      	str	r0, [r7, #4]
 80005b2:	460b      	mov	r3, r1
 80005b4:	807b      	strh	r3, [r7, #2]
 80005b6:	687b      	ldr	r3, [r7, #4]
 80005b8:	887a      	ldrh	r2, [r7, #2]
 80005ba:	835a      	strh	r2, [r3, #26]
 80005bc:	bf00      	nop
 80005be:	370c      	adds	r7, #12
 80005c0:	46bd      	mov	sp, r7
 80005c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005c6:	4770      	bx	lr

080005c8 <RCC_AHB1PeriphClockCmd>:
 80005c8:	b480      	push	{r7}
 80005ca:	b083      	sub	sp, #12
 80005cc:	af00      	add	r7, sp, #0
 80005ce:	6078      	str	r0, [r7, #4]
 80005d0:	460b      	mov	r3, r1
 80005d2:	70fb      	strb	r3, [r7, #3]
 80005d4:	78fb      	ldrb	r3, [r7, #3]
 80005d6:	2b00      	cmp	r3, #0
 80005d8:	d006      	beq.n	80005e8 <RCC_AHB1PeriphClockCmd+0x20>
 80005da:	4b0a      	ldr	r3, [pc, #40]	; (8000604 <RCC_AHB1PeriphClockCmd+0x3c>)
 80005dc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80005de:	4909      	ldr	r1, [pc, #36]	; (8000604 <RCC_AHB1PeriphClockCmd+0x3c>)
 80005e0:	687b      	ldr	r3, [r7, #4]
 80005e2:	4313      	orrs	r3, r2
 80005e4:	630b      	str	r3, [r1, #48]	; 0x30
 80005e6:	e006      	b.n	80005f6 <RCC_AHB1PeriphClockCmd+0x2e>
 80005e8:	4b06      	ldr	r3, [pc, #24]	; (8000604 <RCC_AHB1PeriphClockCmd+0x3c>)
 80005ea:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80005ec:	687b      	ldr	r3, [r7, #4]
 80005ee:	43db      	mvns	r3, r3
 80005f0:	4904      	ldr	r1, [pc, #16]	; (8000604 <RCC_AHB1PeriphClockCmd+0x3c>)
 80005f2:	4013      	ands	r3, r2
 80005f4:	630b      	str	r3, [r1, #48]	; 0x30
 80005f6:	bf00      	nop
 80005f8:	370c      	adds	r7, #12
 80005fa:	46bd      	mov	sp, r7
 80005fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000600:	4770      	bx	lr
 8000602:	bf00      	nop
 8000604:	40023800 	.word	0x40023800

08000608 <__libc_init_array>:
 8000608:	b570      	push	{r4, r5, r6, lr}
 800060a:	4d0d      	ldr	r5, [pc, #52]	; (8000640 <__libc_init_array+0x38>)
 800060c:	4c0d      	ldr	r4, [pc, #52]	; (8000644 <__libc_init_array+0x3c>)
 800060e:	1b64      	subs	r4, r4, r5
 8000610:	10a4      	asrs	r4, r4, #2
 8000612:	2600      	movs	r6, #0
 8000614:	42a6      	cmp	r6, r4
 8000616:	d109      	bne.n	800062c <__libc_init_array+0x24>
 8000618:	4d0b      	ldr	r5, [pc, #44]	; (8000648 <__libc_init_array+0x40>)
 800061a:	4c0c      	ldr	r4, [pc, #48]	; (800064c <__libc_init_array+0x44>)
 800061c:	f000 f818 	bl	8000650 <_init>
 8000620:	1b64      	subs	r4, r4, r5
 8000622:	10a4      	asrs	r4, r4, #2
 8000624:	2600      	movs	r6, #0
 8000626:	42a6      	cmp	r6, r4
 8000628:	d105      	bne.n	8000636 <__libc_init_array+0x2e>
 800062a:	bd70      	pop	{r4, r5, r6, pc}
 800062c:	f855 3b04 	ldr.w	r3, [r5], #4
 8000630:	4798      	blx	r3
 8000632:	3601      	adds	r6, #1
 8000634:	e7ee      	b.n	8000614 <__libc_init_array+0xc>
 8000636:	f855 3b04 	ldr.w	r3, [r5], #4
 800063a:	4798      	blx	r3
 800063c:	3601      	adds	r6, #1
 800063e:	e7f2      	b.n	8000626 <__libc_init_array+0x1e>
 8000640:	08000668 	.word	0x08000668
 8000644:	08000668 	.word	0x08000668
 8000648:	08000668 	.word	0x08000668
 800064c:	0800066c 	.word	0x0800066c

08000650 <_init>:
 8000650:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000652:	bf00      	nop
 8000654:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000656:	bc08      	pop	{r3}
 8000658:	469e      	mov	lr, r3
 800065a:	4770      	bx	lr

0800065c <_fini>:
 800065c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800065e:	bf00      	nop
 8000660:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000662:	bc08      	pop	{r3}
 8000664:	469e      	mov	lr, r3
 8000666:	4770      	bx	lr
